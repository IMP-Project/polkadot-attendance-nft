services:
  postgres:
    image: postgres:15
    container_name: polkadot-nft-db
    environment:
      POSTGRES_DB: polkadot_attendance
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend-nodejs
      dockerfile: Dockerfile
    container_name: polkadot-nft-backend
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/polkadot_attendance
      JWT_SECRET: dev-jwt-secret-key-very-long-and-secure
      NODE_ENV: development
      PORT: 3001
      FRONTEND_URL: http://localhost:3000,http://frontend:3000
      POLKADOT_RPC_URL: wss://ws.test.azero.dev
      CONTRACT_ADDRESS: 5GvobTJcPvkYq8yYK66eitzt4AeLMuB85sYq8YMTwsq8KanA
      SIGNER_MNEMONIC: "denial clip diesel pool peasant garment price sick person cabin fabric million"
      RATE_LIMIT_ENABLED: false
      RATE_LIMIT_REQUESTS_PER_MINUTE: 100
      EVENT_POLL_INTERVAL: 10000
      CHECKIN_POLL_INTERVAL: 5000
      # Email service configuration (enabled for testing)
      EMAIL_ENABLED: true
      EMAIL_SERVICE: development
      EMAIL_FROM: noreply@polkadot-nft.dev
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend-nodejs/src:/app/src
      - ./backend-nodejs/prisma:/app/prisma
    restart: unless-stopped

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: polkadot-nft-frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3001
      REACT_APP_WS_URL: ws://backend:3001
      NODE_OPTIONS: "--max-old-space-size=4096"
      GENERATE_SOURCEMAP: "false"
      FAST_REFRESH: "true"
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data: